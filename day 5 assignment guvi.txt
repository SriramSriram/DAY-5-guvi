DAY 6 TASK:

QN 1a: Print odd numbers in an array

ANONYMOUS FUNCTION:
let getOdd=function (arr){
  let odd=[];
  for (let i in arr) {
    if (arr[i]%2 !== 0) {
      odd.push(arr[i]);
    }
  }
  console.log(odd);
}
getOdd([25,26,27,28,29,30]);


output:


[ 25, 27, 29 ]

IIFE: IMMEDIATELY INVOKED FUNCTION EXPRESSION:

(function (arr){
  let odd=[];
  for (let i in arr) {
    if (arr[i]%2 !== 0) {
      odd.push(arr[i]);
    }
  }
  console.log(odd);
})([25,26,27,28,29,30]);

OUTPUT:

[ 25, 27, 29 ]


QN: 1b:Convert all the strings to title caps in a string array
ANONYMOUS FUNCTION:
CODE


let titleCase= function(str) {
  str = str.toLowerCase().split(' ');
  for (var i = 0; i < str.length; i++) {
    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
  }
  return str.join(' ');
}
console.log(titleCase("guvi geek"));

OUTPUT:
Guvi Geek

IIFE:

CODE:
(function titleCase(str) {
    str = str.toLowerCase().split(' ');
    for (var i = 0; i < str.length; i++) {
      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
    }
    console.log(str.join(' '))

  })('guvi geek')

OUTPUT:
Guvi Geek


QN :1c:Sum of all numbers in an array:

ANONYMOUS FUNCTION:

CODE:


let getSum = function(arr){
  let sum=0;
  for(let i=0;i<arr.length;i++){
  sum+=arr[i]
  }
  console.log(sum);

}
getSum([10,20,30,40])

OUTPUT:

100

IIFE:

CODE:

(function(arr){
  let sum=0;
  for(let i=0;i<arr.length;i++){
  sum+=arr[i]
  }
  console.log(sum);

})
([10,20,30,40])

OUTPUT:

100



QN:1d:Return all the prime numbers in an array

CODE:

var arr=[1,2,5,9,11,3,7,22,56,3,56,343,68,59,34,87,8,45,34];
var isPrime=function(n){
  if (n==1) {return false;
}
else if (n==2) {return true;
}
else{
  for (let x=2; x<n; x++) {
    if (n%x===0){
      return false;
    }
  }
  return true;
}
}
var filterPrime = function(arr){
  let filtered=[];
  for (let i=0; i<arr.length; i++) {
    if(isPrime(arr[i])){
      filtered.push(arr[i]);
    }
  }
  return filtered;
}
console.log(filterPrime(arr));

OUTPUT:


[
  2, 5, 11, 3,
  7, 3, 59
]

QN NO 1e: Return all the palindromes in an array


CODE:

const arr = ['racecar', 1344, 12321, 'did', 'cannot'];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));



OUTPUT:

[ 'racecar', 12321, 'did' ]


QN NO:1F: Return median of two sorted arrays of the same size


CODE:

function getMedian(ar1, ar2, n)
{
    var i = 0; 
    var j = 0; 
    var count;
    var m1 = -1, m2 = -1;
 
    
    for (count = 0; count <= n; count++)
    {
        
        if (i == n)
        {
            m1 = m2;
            m2 = ar2[0];
            break;
        }
 
        
        else if (j == n)
        {
            m1 = m2;
            m2 = ar1[0];
            break;
        }
        
        if (ar1[i] <= ar2[j])
        {
            m1 = m2; /* Store the prev median */
            m2 = ar1[i];
            i++;
        }
        else
        {
            m1 = m2; /* Store the prev median */
            m2 = ar2[j];
            j++;
        }
    }
 
    return (m1 + m2)/2;
}

var ar1 = [1, 12, 15, 26, 38];
var ar2 = [2, 13, 17, 30, 45];
var n1 = ar1.length;
var n2 = ar2.length;
if (n1 == n2)
    console.log("Median is "+ getMedian(ar1, ar2, n1));
else
    console.log("Doesn't work for arrays of unequal size");



OUTPUT:

Median is 16


QN NO 1g:Remove duplicates from an array


CODE:
function toUniqueArray(a){
    var newArr = [];
    for (var i = 0; i < a.length; i++) {
        if (newArr.indexOf(a[i]) === -1) {
            newArr.push(a[i]);
        }
    }
  return newArr;
}
var colors = ["red","red","green","green","green"];
var colorsUnique=toUniqueArray(colors);


OUTPUT:

["red","green"]


QN NO 1h:Rotate an array by k times

CODE:

let res = (function(arr, k) {
    for(let i =0;i<k;i++){
        let temp = arr[0];
        for(let j =0;j<arr.length-1;j++){
            arr[j] = arr[j+1];
        }
        arr[arr.length-1] = temp;
    }
    return arr;
})(arr, 2);
console.log(res);


